{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Project\\\\weather-app\\\\src\\\\components\\\\WeatherCard\\\\WeatherCard.jsx\";\nimport React from 'react';\nimport { Container, Block, BlockItem, City, Time, Description, Temperature, Location } from './WeatherCard.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherCard({\n  weatherCity\n}) {\n  // console.log(weatherCity);\n  // console.log((new Date(weatherCity.dt * 1000)).getTimezoneOffset() / 60)\n  // Неправильно показывает время, исправить.\n  const UTCTime = () => {\n    let time = new Date(weatherCity.dt * 1000);\n    return time.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container\n  // onClick={() =>\n  //   console.log(\n  //     `myWeatherCityCard Name: ${weatherCity.name} lat: ${weatherCity.coord.lat} lon ${weatherCity.coord.lon}`\n  //   )\n  // }\n  , {\n    children: [/*#__PURE__*/_jsxDEV(Block, {\n      children: [/*#__PURE__*/_jsxDEV(BlockItem, {\n        children: [/*#__PURE__*/_jsxDEV(City, {\n          children: weatherCity.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Time, {\n          children: UTCTime()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Temperature, {\n        children: [Math.trunc(weatherCity.main.temp), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Block, {\n      children: [/*#__PURE__*/_jsxDEV(Description, {\n        children: weatherCity.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Location, {\n        children: [\"H:\", Math.trunc(weatherCity.coord.lat), \" L:\", Math.trunc(weatherCity.coord.lon)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClposeB, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["React","Container","Block","BlockItem","City","Time","Description","Temperature","Location","jsxDEV","_jsxDEV","WeatherCard","weatherCity","UTCTime","time","Date","dt","toLocaleTimeString","hour","minute","children","name","fileName","_jsxFileName","lineNumber","columnNumber","Math","trunc","main","temp","weather","description","coord","lat","lon","ClposeB","_c","$RefreshReg$"],"sources":["D:/My Project/weather-app/src/components/WeatherCard/WeatherCard.jsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Container,\r\n  Block,\r\n  BlockItem,\r\n  City,\r\n  Time,\r\n  Description,\r\n  Temperature,\r\n  Location,\r\n} from './WeatherCard.styled';\r\n\r\nfunction WeatherCard({ weatherCity }) {\r\n  // console.log(weatherCity);\r\n  // console.log((new Date(weatherCity.dt * 1000)).getTimezoneOffset() / 60)\r\n  // Неправильно показывает время, исправить.\r\n  const UTCTime = () => {\r\n    let time = new Date(weatherCity.dt * 1000);\r\n    return time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      // onClick={() =>\r\n      //   console.log(\r\n      //     `myWeatherCityCard Name: ${weatherCity.name} lat: ${weatherCity.coord.lat} lon ${weatherCity.coord.lon}`\r\n      //   )\r\n      // }\r\n    >\r\n      <Block>\r\n        <BlockItem>\r\n          <City>{weatherCity.name}</City>\r\n          <Time>\r\n            {/* {(new Date(weatherCity.dt * 1000)).toUTCString()} */}\r\n            {UTCTime()}\r\n          </Time>\r\n        </BlockItem>\r\n        <Temperature>{Math.trunc(weatherCity.main.temp)}°</Temperature>\r\n      </Block>\r\n      <Block>\r\n        <Description>{weatherCity.weather[0].description}</Description>\r\n        <Location>\r\n          H:{Math.trunc(weatherCity.coord.lat)} L:\r\n          {Math.trunc(weatherCity.coord.lon)}\r\n        </Location>\r\n      </Block>\r\n      <ClposeB></ClposeB>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,KAAK,EACLC,SAAS,EACTC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,WAAW,EACXC,QAAQ,QACH,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,WAAWA,CAAC;EAAEC;AAAY,CAAC,EAAE;EACpC;EACA;EACA;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACH,WAAW,CAACI,EAAE,GAAG,IAAI,CAAC;IAC1C,OAAOF,IAAI,CAACG,kBAAkB,CAAC,EAAE,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;EAC5E,CAAC;EAED,oBACET,OAAA,CAACT;EACC;EACA;EACA;EACA;EACA;EAAA;IAAAmB,QAAA,gBAEAV,OAAA,CAACR,KAAK;MAAAkB,QAAA,gBACJV,OAAA,CAACP,SAAS;QAAAiB,QAAA,gBACRV,OAAA,CAACN,IAAI;UAAAgB,QAAA,EAAER,WAAW,CAACS;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/Bf,OAAA,CAACL,IAAI;UAAAe,QAAA,EAEFP,OAAO,CAAC;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACZf,OAAA,CAACH,WAAW;QAAAa,QAAA,GAAEM,IAAI,CAACC,KAAK,CAACf,WAAW,CAACgB,IAAI,CAACC,IAAI,CAAC,EAAC,MAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACRf,OAAA,CAACR,KAAK;MAAAkB,QAAA,gBACJV,OAAA,CAACJ,WAAW;QAAAc,QAAA,EAAER,WAAW,CAACkB,OAAO,CAAC,CAAC,CAAC,CAACC;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eAC/Df,OAAA,CAACF,QAAQ;QAAAY,QAAA,GAAC,IACN,EAACM,IAAI,CAACC,KAAK,CAACf,WAAW,CAACoB,KAAK,CAACC,GAAG,CAAC,EAAC,KACrC,EAACP,IAAI,CAACC,KAAK,CAACf,WAAW,CAACoB,KAAK,CAACE,GAAG,CAAC;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACRf,OAAA,CAACyB,OAAO;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEhB;AAACW,EAAA,GArCQzB,WAAW;AAuCpB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}