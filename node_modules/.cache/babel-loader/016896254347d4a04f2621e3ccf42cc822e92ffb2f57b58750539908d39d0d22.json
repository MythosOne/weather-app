{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Project\\\\weather-app\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { WeatherCity } from '../components/WeatherCity/WeatherCity';\nimport { WeatherSection } from '../components/WeatherSection/WeatherSection';\nimport { useEffect, useState } from 'react';\nimport { apiServiceWeatherData, apiServiceForecastData\n// apiServiceSearchData,\n} from '../Api/apiService';\nimport { Loader } from '../components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // const [weather, setWeather] = useState(\n  //   JSON.parse(localStorage.getItem('weather')) ?? []\n  // );\n  // const [forecast, setForecast] = useState(\n  //   JSON.parse(localStorage.getItem('weather')) ?? []\n  // );\n  // const [location, setLocation] = useState({\n  //   latitude: null,\n  //   longitude: null,\n  // });\n  const [isLoading, setIsLoading] = useState(false);\n\n  // console.log('weather:', weather);\n  // console.log('forecast:', forecast);\n  // const { latitude, longitude } = location;\n\n  // const handleSuccess = position => {\n  //   const { latitude, longitude } = position.coords;\n  //   setLocation({ latitude, longitude });\n  // };\n\n  // const handleError = error => {\n  //   console.log(error);\n  // };\n\n  // useEffect(() => {\n  //   localStorage.setItem('weather', JSON.stringify(weather));\n  //   setIsLoading(true);\n\n  //   if ('geolocation' in navigator) {\n  //     navigator.geolocation.getCurrentPosition(handleSuccess, handleError);\n  //   } else {\n  //     alert('Geolocation is not supported by your browser');\n  //   }\n\n  //   if (latitude !== null && longitude !== null) {\n  //     apiServiceWeatherData(latitude, longitude)\n  //       .then(weather => setWeather(weather))\n  //       .catch(error => console.error(error))\n  //       .finally(() => setIsLoading(false));\n\n  //     apiServiceForecastData(latitude, longitude)\n  //       .then(forecast => setForecast(forecast))\n  //       .catch(error => console.error(error))\n  //       .finally(() => setIsLoading(false));\n  //   }\n  // }, [latitude, longitude]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [(Object.keys(weatherCity).length || Object.keys(forecast).length) && /*#__PURE__*/_jsxDEV(WeatherSection, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["WeatherCity","WeatherSection","useEffect","useState","apiServiceWeatherData","apiServiceForecastData","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","isLoading","setIsLoading","children","Object","keys","weatherCity","length","forecast","weather","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/My Project/weather-app/src/pages/Home.jsx"],"sourcesContent":["import { WeatherCity } from '../components/WeatherCity/WeatherCity';\r\nimport { WeatherSection } from '../components/WeatherSection/WeatherSection';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  apiServiceWeatherData,\r\n  apiServiceForecastData,\r\n  // apiServiceSearchData,\r\n} from '../Api/apiService';\r\nimport { Loader } from '../components/Loader/Loader';\r\n\r\nconst Home = () => {\r\n  // const [weather, setWeather] = useState(\r\n  //   JSON.parse(localStorage.getItem('weather')) ?? []\r\n  // );\r\n  // const [forecast, setForecast] = useState(\r\n  //   JSON.parse(localStorage.getItem('weather')) ?? []\r\n  // );\r\n  // const [location, setLocation] = useState({\r\n  //   latitude: null,\r\n  //   longitude: null,\r\n  // });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // console.log('weather:', weather);\r\n  // console.log('forecast:', forecast);\r\n  // const { latitude, longitude } = location;\r\n\r\n  // const handleSuccess = position => {\r\n  //   const { latitude, longitude } = position.coords;\r\n  //   setLocation({ latitude, longitude });\r\n  // };\r\n\r\n  // const handleError = error => {\r\n  //   console.log(error);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem('weather', JSON.stringify(weather));\r\n  //   setIsLoading(true);\r\n\r\n  //   if ('geolocation' in navigator) {\r\n  //     navigator.geolocation.getCurrentPosition(handleSuccess, handleError);\r\n  //   } else {\r\n  //     alert('Geolocation is not supported by your browser');\r\n  //   }\r\n\r\n  //   if (latitude !== null && longitude !== null) {\r\n  //     apiServiceWeatherData(latitude, longitude)\r\n  //       .then(weather => setWeather(weather))\r\n  //       .catch(error => console.error(error))\r\n  //       .finally(() => setIsLoading(false));\r\n\r\n  //     apiServiceForecastData(latitude, longitude)\r\n  //       .then(forecast => setForecast(forecast))\r\n  //       .catch(error => console.error(error))\r\n  //       .finally(() => setIsLoading(false));\r\n  //   }\r\n  // }, [latitude, longitude]);\r\n\r\n  return (\r\n    <>\r\n      {/* {Object.keys(weather).length && <WeatherCity weather={weather} />} */}\r\n      {(Object.keys(weatherCity).length || Object.keys(forecast).length) && (\r\n        <WeatherSection weather={weather} />\r\n      )}\r\n      {isLoading && <Loader />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,uCAAuC;AACnE,SAASC,cAAc,QAAQ,6CAA6C;AAC5E,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SACEC,qBAAqB,EACrBC;AACA;AAAA,OACK,mBAAmB;AAC1B,SAASC,MAAM,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEK,OAAA,CAAAE,SAAA;IAAAK,QAAA,GAEG,CAACC,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAACC,MAAM,IAAIH,MAAM,CAACC,IAAI,CAACG,QAAQ,CAAC,CAACD,MAAM,kBAC/DX,OAAA,CAACP,cAAc;MAACoB,OAAO,EAAEA;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpC,EACAZ,SAAS,iBAAIL,OAAA,CAACF,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACxB,CAAC;AAEP,CAAC;AAACb,EAAA,CA1DID,IAAI;AAAAe,EAAA,GAAJf,IAAI;AA4DV,eAAeA,IAAI;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}