{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Project\\\\weather-app\\\\src\\\\components\\\\WeatherCity\\\\WeatherCity.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import { nanoid } from 'nanoid';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { WeatherBar, Title } from './WeatherCity.styled';\nimport { WeatherList } from '../WeatherList/WeatherList';\nimport { apiServiceSearchData } from '../../Api/apiService';\nimport { Loader } from '../Loader/Loader';\nimport { WeatherCityClose } from '../../icons/IconComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherCity = ({\n  weather,\n  weatherCity,\n  setWeatherCity,\n  isOpen\n}) => {\n  _s();\n  // const [weatherCity, setWeatherCity] = useState(\n  //   JSON.parse(localStorage.getItem('weatherCity')) ?? []\n  // );\n  const [value, setValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  // console.log(\"first value: \" + JSON.stringify(value))\n  // console.log('weatherCity:', weatherCity);\n  console.log('WeatherCity- isOpen:', isOpen);\n  console.log('offset:', offset);\n\n  // !!!!!!!!!!!!!!!!\n  const handleSubmit = value => {\n    setValue(value.toLowerCase());\n  };\n  const addCity = city => {\n    if (city.length === 0) {\n      alert('Field must be filled');\n    }\n  };\n  const handleClose = () => setOffset(0);\n  useEffect(() => {\n    if (isOpen) {\n      console.log('WeatherCity-useEffect-isOpen:', isOpen);\n      setOffset(100);\n    } else {\n      setOffset(0);\n    }\n  }, [isOpen]);\n  useEffect(() => {\n    localStorage.setItem('weatherCity', JSON.stringify(weatherCity));\n    if (value.trim() === '') {\n      return;\n    }\n    setIsLoading(true);\n    apiServiceSearchData(value).then(data => setWeatherCity([...weatherCity, {\n      ...data\n    }])).catch(error => console.error(error)).finally(() => setIsLoading(false));\n\n    // if(isOpen){\n    //   console.log(\"WeatherCity-useEffect-isOpen:\", isOpen);\n    //   setOffset(100);\n    // }\n  }, [value, /*isOpen,*/setWeatherCity, weatherCity]);\n  return /*#__PURE__*/_jsxDEV(WeatherBar, {\n    dataOffset: offset,\n    handleClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(WeatherHead, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSubmit: handleSubmit,\n      onAddCity: addCity,\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherList, {\n      cities: weatherCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherCity, \"podabYCaNYXpvFPuHkPxUjonGVg=\");\n_c = WeatherCity;\nvar _c;\n$RefreshReg$(_c, \"WeatherCity\");","map":{"version":3,"names":["React","useEffect","useState","SearchBar","WeatherBar","Title","WeatherList","apiServiceSearchData","Loader","WeatherCityClose","jsxDEV","_jsxDEV","WeatherCity","weather","weatherCity","setWeatherCity","isOpen","_s","value","setValue","isLoading","setIsLoading","offset","setOffset","console","log","handleSubmit","toLowerCase","addCity","city","length","alert","handleClose","localStorage","setItem","JSON","stringify","trim","then","data","catch","error","finally","dataOffset","children","WeatherHead","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onAddCity","cities","_c","$RefreshReg$"],"sources":["D:/My Project/weather-app/src/components/WeatherCity/WeatherCity.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// import { nanoid } from 'nanoid';\r\nimport { SearchBar } from '../SearchBar/SearchBar';\r\nimport { WeatherBar, Title } from './WeatherCity.styled';\r\nimport { WeatherList } from '../WeatherList/WeatherList';\r\nimport { apiServiceSearchData } from '../../Api/apiService';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\nimport {WeatherCityClose} from '../../icons/IconComponent'\r\n\r\nexport const WeatherCity = ({\r\n  weather,\r\n  weatherCity,\r\n  setWeatherCity,\r\n  isOpen,\r\n}) => {\r\n  // const [weatherCity, setWeatherCity] = useState(\r\n  //   JSON.parse(localStorage.getItem('weatherCity')) ?? []\r\n  // );\r\n  const [value, setValue] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [offset, setOffset] = useState(0);\r\n  // console.log(\"first value: \" + JSON.stringify(value))\r\n  // console.log('weatherCity:', weatherCity);\r\n  console.log('WeatherCity- isOpen:', isOpen);\r\n  console.log('offset:', offset);\r\n\r\n  // !!!!!!!!!!!!!!!!\r\n  const handleSubmit = value => {\r\n    setValue(value.toLowerCase());\r\n  };\r\n\r\n  const addCity = city => {\r\n    if (city.length === 0) {\r\n      alert('Field must be filled');\r\n    }\r\n  };\r\n\r\n  const handleClose = () => setOffset(0);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      console.log('WeatherCity-useEffect-isOpen:', isOpen);\r\n      setOffset(100);\r\n    } else {\r\n      setOffset(0);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('weatherCity', JSON.stringify(weatherCity));\r\n\r\n    if (value.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    apiServiceSearchData(value)\r\n      .then(data => setWeatherCity([...weatherCity, { ...data }]))\r\n\r\n      .catch(error => console.error(error))\r\n      .finally(() => setIsLoading(false));\r\n\r\n    // if(isOpen){\r\n    //   console.log(\"WeatherCity-useEffect-isOpen:\", isOpen);\r\n    //   setOffset(100);\r\n    // }\r\n  }, [value, /*isOpen,*/ setWeatherCity, weatherCity]);\r\n\r\n  return (\r\n    <WeatherBar dataOffset={offset} handleClose={handleClose}>\r\n      <WeatherHead></WeatherHead>\r\n\r\n      <SearchBar\r\n        onSubmit={handleSubmit}\r\n        onAddCity={addCity}\r\n        weather={weather}\r\n      />\r\n      <WeatherList cities={weatherCity} />\r\n      {isLoading && <Loader />}\r\n    </WeatherBar>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}