{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Project\\\\weather-app\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { WeatherCity } from '../components/WeatherCity/WeatherCity';\nimport { MyLocationWeather } from '../components/MyLocationWeather/MyLocationWeather';\nimport { useEffect, useState } from 'react';\nimport { apiServiceWeatherData, apiServiceForecastData } from '../Api/apiService';\nimport { Loader } from '../components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // const [weather, setWeather] = useState(\n  //   JSON.parse(localStorage.getItem('weather')) ?? {}\n  // );\n  const [location, setLocation] = useState({\n    latitude: null,\n    longitude: null\n  });\n  const [weather, setWeather] = useState({});\n  // const [forecast, setForecast] = useState(\n  //   JSON.parse(localStorage.getItem('weather')) ?? {}\n  // );\n  const [forecast, setForecast] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(location);\n  console.log(weather);\n  console.log(forecast);\n  const {\n    latitude,\n    longitude\n  } = location;\n  const handleSuccess = position => {\n    const {\n      latitude,\n      longitude\n    } = position.coords;\n    setLocation({\n      latitude,\n      longitude\n    });\n  };\n  const handleError = error => {\n    console.log(error);\n  };\n  useEffect(() => {\n    localStorage.setItem('weather', JSON.stringify(weather));\n    setIsLoading(true);\n\n    // if (latitude !== null && longitude !== null) {\n    apiServiceWeatherData(latitude, longitude).then(weather => setWeather(weather)).catch(error => console.error(error)).finally(() => setIsLoading(false));\n    apiServiceForecastData(latitude, longitude).then(forecast => setForecast(forecast)).catch(error => console.error(error)).finally(() => setIsLoading(false));\n    // }\n  }, [latitude, longitude, weather]);\n  console.log(latitude, longitude);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WeatherCity, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyLocationWeather, {\n      weather: weather,\n      forecast: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"oFcW56yBUG+88mTHpp69pqj0hAU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["WeatherCity","MyLocationWeather","useEffect","useState","apiServiceWeatherData","apiServiceForecastData","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","location","setLocation","latitude","longitude","weather","setWeather","forecast","setForecast","isLoading","setIsLoading","console","log","handleSuccess","position","coords","handleError","error","localStorage","setItem","JSON","stringify","then","catch","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/My Project/weather-app/src/pages/Home.jsx"],"sourcesContent":["import { WeatherCity } from '../components/WeatherCity/WeatherCity';\r\nimport { MyLocationWeather } from '../components/MyLocationWeather/MyLocationWeather';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  apiServiceWeatherData,\r\n  apiServiceForecastData,\r\n} from '../Api/apiService';\r\nimport { Loader } from '../components/Loader/Loader';\r\n\r\nconst Home = () => {\r\n  // const [weather, setWeather] = useState(\r\n  //   JSON.parse(localStorage.getItem('weather')) ?? {}\r\n  // );\r\n  const [location, setLocation] = useState({\r\n    latitude: null,\r\n    longitude: null,\r\n  });\r\n  const [weather, setWeather] = useState({});\r\n  // const [forecast, setForecast] = useState(\r\n  //   JSON.parse(localStorage.getItem('weather')) ?? {}\r\n  // );\r\n  const [forecast, setForecast] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  console.log(location);\r\n  console.log(weather);\r\n  console.log(forecast);\r\n  const { latitude, longitude } = location;\r\n\r\n  const handleSuccess = position => {\r\n    const { latitude, longitude } = position.coords;\r\n    setLocation({ latitude, longitude });\r\n  };\r\n\r\n  const handleError = error => {\r\n    console.log(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('weather', JSON.stringify(weather));\r\n    setIsLoading(true);\r\n\r\n\r\n\r\n    // if (latitude !== null && longitude !== null) {\r\n    apiServiceWeatherData(latitude, longitude)\r\n      .then(weather => setWeather(weather))\r\n      .catch(error => console.error(error))\r\n      .finally(() => setIsLoading(false));\r\n\r\n    apiServiceForecastData(latitude, longitude)\r\n      .then(forecast => setForecast(forecast))\r\n      .catch(error => console.error(error))\r\n      .finally(() => setIsLoading(false));\r\n    // }\r\n  }, [latitude, longitude, weather]);\r\n\r\n  console.log(latitude, longitude);\r\n\r\n  return (\r\n    <>\r\n      {/* {Object.keys(weather).length && <WeatherCity weather={weather} />}\r\n      {Object.keys(weather).length && <MyLocationWeather weather={weather} />} */}\r\n\r\n      <WeatherCity weather={weather} />\r\n      <MyLocationWeather weather={weather} forecast={forecast} />\r\n      {isLoading && <Loader />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}