{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Project\\\\weather-app\\\\src\\\\components\\\\SearchBar\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ImSearch /*ImPlus*/ } from 'react-icons/im';\nimport { SearchBarForm, Container, ButtonSearch,\n// ButtonAdd,\nInput } from './SearchBar.styled';\nimport MyLocationCard from '../MyLocationCard/MyLocationCard';\nimport { apiServiceSearchData } from '../../Api/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchBar = ({\n  onAddCity,\n  weather\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [weatherCity, setWeatherCity] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(first);\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddCity(value);\n    setValue('');\n  };\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  useEffect(() => {\n    if (value.trim() === '') {\n      return;\n    }\n    setIsLoading(true);\n    // Все запросы должны идти через корневой компонент Home!!!!\n    apiServiceSearchData(value).then(weatherCity => setWeatherCity(weatherCity)).catch(error => console.error(error)).finally(() => setIsLoading(false));\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBarForm, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(ButtonSearch, {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(ImSearch, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"inputData\",\n        value: value,\n        onChange: handleChange,\n        type: \"text\",\n        autoFocus: true,\n        autoComplete: \"off\",\n        placeholder: \"Search for a city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyLocationCard, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"y/tJ5MF4zL/muj5OEZqm3Oor1G8=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useEffect","useState","ImSearch","SearchBarForm","Container","ButtonSearch","Input","MyLocationCard","apiServiceSearchData","jsxDEV","_jsxDEV","SearchBar","onAddCity","weather","_s","value","setValue","weatherCity","setWeatherCity","isLoading","setIsLoading","console","log","first","handleSubmit","e","preventDefault","handleChange","target","trim","then","catch","error","finally","children","onSubmit","type","size","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","autoFocus","autoComplete","placeholder","_c","$RefreshReg$"],"sources":["D:/My Project/weather-app/src/components/SearchBar/SearchBar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ImSearch /*ImPlus*/ } from 'react-icons/im';\r\nimport {\r\n  SearchBarForm,\r\n  Container,\r\n  ButtonSearch,\r\n  // ButtonAdd,\r\n  Input,\r\n} from './SearchBar.styled';\r\nimport MyLocationCard from '../MyLocationCard/MyLocationCard';\r\nimport { apiServiceSearchData } from '../../Api/apiService';\r\n\r\nexport const SearchBar = ({ onAddCity, weather }) => {\r\n  const [value, setValue] = useState('');\r\n  const [weatherCity, setWeatherCity] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  console.log(first)\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onAddCity(value);\r\n    setValue('');\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (value.trim() === '') {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    // Все запросы должны идти через корневой компонент Home!!!!\r\n    apiServiceSearchData(value)\r\n      .then(weatherCity => setWeatherCity(weatherCity))\r\n      .catch(error => console.error(error))\r\n      .finally(() => setIsLoading(false));\r\n  }, [value]);\r\n\r\n  return (\r\n    <Container>\r\n      <SearchBarForm onSubmit={handleSubmit}>\r\n        <ButtonSearch type=\"submit\">\r\n          <ImSearch size={18} />\r\n        </ButtonSearch>\r\n        <Input\r\n          name=\"inputData\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          autoComplete=\"off\"\r\n          placeholder=\"Search for a city\"\r\n        />\r\n        {/* <ButtonAdd type=\"onClick\">\r\n          <ImPlus size={18} />\r\n        </ButtonAdd> */}\r\n      </SearchBarForm>\r\n      <MyLocationCard weather={weather} />\r\n    </Container>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}