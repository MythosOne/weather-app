{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Project\\\\weather-app\\\\src\\\\pages\\\\Homepage.jsx\",\n  _s = $RefreshSig$();\nimport { WeatherCity } from '../components/WeatherCity/WeatherCity';\nimport { WeatherSection } from '../components/WeatherSection/WeatherSection';\nimport { useEffect, useState } from 'react';\nimport { apiServiceWeatherData, apiServiceForecastData\n// apiServiceSearchData,\n} from '../Api/apiService';\nimport { Loader } from '../components/Loader/Loader';\nimport { Main } from './Homepage.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Homepage = ({\n  isOpen\n}) => {\n  _s();\n  var _JSON$parse, _JSON$parse2, _JSON$parse3;\n  const [weatherCity, setWeatherCity] = useState((_JSON$parse = JSON.parse(localStorage.getItem('weatherCity'))) !== null && _JSON$parse !== void 0 ? _JSON$parse : []);\n  const [locationWeather, setLocationWeather] = useState((_JSON$parse2 = JSON.parse(localStorage.getItem('weather'))) !== null && _JSON$parse2 !== void 0 ? _JSON$parse2 : []);\n  const [forecast, setForecast] = useState((_JSON$parse3 = JSON.parse(localStorage.getItem('forecast'))) !== null && _JSON$parse3 !== void 0 ? _JSON$parse3 : []);\n  const [location, setLocation] = useState({\n    latitude: null,\n    longitude: null\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  console.log('locationWeather:', locationWeather);\n  console.log('forecast:', forecast);\n  const {\n    latitude,\n    longitude\n  } = location;\n  const handleSuccess = position => {\n    const {\n      latitude,\n      longitude\n    } = position.coords;\n    setLocation({\n      latitude,\n      longitude\n    });\n  };\n  const handleError = error => {\n    console.log(error);\n  };\n  console.log(\"isOpen\");\n  useEffect(() => {\n    localStorage.setItem('locationWeather', JSON.stringify(locationWeather));\n    setIsLoading(true);\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(handleSuccess, handleError);\n    } else {\n      alert('Geolocation is not supported by your browser');\n    }\n    if (latitude !== null && longitude !== null) {\n      apiServiceWeatherData(latitude, longitude).then(weather => setLocationWeather(weather)).catch(error => console.error(error)).finally(() => setIsLoading(false));\n      apiServiceForecastData(latitude, longitude).then(forecast => setForecast(forecast)).catch(error => console.error(error)).finally(() => setIsLoading(false));\n    }\n  }, [latitude, longitude]);\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [Object.keys(locationWeather).length && /*#__PURE__*/_jsxDEV(WeatherCity, {\n      weather: locationWeather,\n      weatherCity: weatherCity,\n      setWeatherCity: setWeatherCity,\n      open: isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 47\n    }, this), (Object.keys(locationWeather).length || Object.keys(forecast).length) && /*#__PURE__*/_jsxDEV(WeatherSection, {\n      weather: locationWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Homepage, \"dr+k+RvW9TLimcnGogIs/b8soBU=\");\n_c = Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["WeatherCity","WeatherSection","useEffect","useState","apiServiceWeatherData","apiServiceForecastData","Loader","Main","jsxDEV","_jsxDEV","Homepage","isOpen","_s","_JSON$parse","_JSON$parse2","_JSON$parse3","weatherCity","setWeatherCity","JSON","parse","localStorage","getItem","locationWeather","setLocationWeather","forecast","setForecast","location","setLocation","latitude","longitude","isLoading","setIsLoading","console","log","handleSuccess","position","coords","handleError","error","setItem","stringify","navigator","geolocation","getCurrentPosition","alert","then","weather","catch","finally","children","Object","keys","length","open","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/My Project/weather-app/src/pages/Homepage.jsx"],"sourcesContent":["import { WeatherCity } from '../components/WeatherCity/WeatherCity';\r\nimport { WeatherSection } from '../components/WeatherSection/WeatherSection';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  apiServiceWeatherData,\r\n  apiServiceForecastData,\r\n  // apiServiceSearchData,\r\n} from '../Api/apiService';\r\nimport { Loader } from '../components/Loader/Loader';\r\nimport {Main} from './Homepage.styled'\r\n\r\nexport const Homepage = ({isOpen}) => {\r\n  const [weatherCity, setWeatherCity] = useState(\r\n    JSON.parse(localStorage.getItem('weatherCity')) ?? []\r\n  );\r\n  const [locationWeather, setLocationWeather] = useState(\r\n    JSON.parse(localStorage.getItem('weather')) ?? []\r\n  );\r\n  const [forecast, setForecast] = useState(\r\n    JSON.parse(localStorage.getItem('forecast')) ?? []\r\n  );\r\n  const [location, setLocation] = useState({\r\n    latitude: null,\r\n    longitude: null,\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  console.log('locationWeather:', locationWeather);\r\n  console.log('forecast:', forecast);\r\n  const { latitude, longitude } = location;\r\n\r\n  const handleSuccess = position => {\r\n    const { latitude, longitude } = position.coords;\r\n    setLocation({ latitude, longitude });\r\n  };\r\n\r\n  const handleError = error => {\r\n    console.log(error);\r\n  };\r\n\r\n  console.log(\"isOpen\")\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('locationWeather', JSON.stringify(locationWeather));\r\n    setIsLoading(true);\r\n\r\n    if ('geolocation' in navigator) {\r\n      navigator.geolocation.getCurrentPosition(handleSuccess, handleError);\r\n    } else {\r\n      alert('Geolocation is not supported by your browser');\r\n    }\r\n\r\n    if (latitude !== null && longitude !== null) {\r\n      apiServiceWeatherData(latitude, longitude)\r\n        .then(weather => setLocationWeather(weather))\r\n        .catch(error => console.error(error))\r\n        .finally(() => setIsLoading(false));\r\n\r\n      apiServiceForecastData(latitude, longitude)\r\n        .then(forecast => setForecast(forecast))\r\n        .catch(error => console.error(error))\r\n        .finally(() => setIsLoading(false));\r\n    }\r\n  }, [latitude, longitude]);\r\n\r\n  return (\r\n    <Main>\r\n      {Object.keys(locationWeather).length && <WeatherCity weather={locationWeather} weatherCity={weatherCity} setWeatherCity={setWeatherCity} open={isOpen}/>}\r\n      {(Object.keys(locationWeather).length || Object.keys(forecast).length) && (\r\n        <WeatherSection weather={locationWeather} />\r\n      )}\r\n      {isLoading && <Loader />}\r\n    </Main>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}