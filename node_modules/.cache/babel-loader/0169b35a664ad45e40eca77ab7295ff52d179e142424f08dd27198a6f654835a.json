{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Project\\\\weather-app\\\\src\\\\components\\\\WeatherCity\\\\WeatherCity.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import { nanoid } from 'nanoid';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { WeatherForm, Title } from './WeatherCity.styled';\nimport { WeatherList } from '../WeatherList/WeatherList';\nimport { apiServiceSearchData } from '../../Api/apiService';\nimport { Loader } from '../Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherCity = ({\n  weather,\n  weatherCity,\n  setWeatherCity,\n  isOpen\n}) => {\n  _s();\n  // const [weatherCity, setWeatherCity] = useState(\n  //   JSON.parse(localStorage.getItem('weatherCity')) ?? []\n  // );\n  const [value, setValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [offset, setOffset] = useState(\"-100%\");\n  console.log(\"first value: \" + JSON.stringify(value));\n  console.log('weatherCity:', weatherCity);\n\n  // !!!!!!!!!!!!!!!!\n  const handleSubmit = value => {\n    setValue(value.toLowerCase());\n  };\n  const addCity = city => {\n    if (city.length === 0) {\n      alert('Field must be filled');\n    }\n  };\n  useEffect(() => {\n    localStorage.setItem('weatherCity', JSON.stringify(weatherCity));\n    if (value.trim() === '') {\n      return;\n    }\n    setIsLoading(true);\n    apiServiceSearchData(value).then(data => setWeatherCity([...weatherCity, {\n      ...data\n    }])).catch(error => console.error(error)).finally(() => setIsLoading(false));\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(WeatherForm, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSubmit: handleSubmit,\n      onAddCity: addCity,\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherList, {\n      cities: weatherCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherCity, \"jQWp+CBJ4Oqa4fPjTxC031B0L7Y=\");\n_c = WeatherCity;\nvar _c;\n$RefreshReg$(_c, \"WeatherCity\");","map":{"version":3,"names":["React","useEffect","useState","SearchBar","WeatherForm","Title","WeatherList","apiServiceSearchData","Loader","jsxDEV","_jsxDEV","WeatherCity","weather","weatherCity","setWeatherCity","isOpen","_s","value","setValue","isLoading","setIsLoading","offset","setOffset","console","log","JSON","stringify","handleSubmit","toLowerCase","addCity","city","length","alert","localStorage","setItem","trim","then","data","catch","error","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onAddCity","cities","_c","$RefreshReg$"],"sources":["D:/My Project/weather-app/src/components/WeatherCity/WeatherCity.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// import { nanoid } from 'nanoid';\r\nimport { SearchBar } from '../SearchBar/SearchBar';\r\nimport { WeatherForm, Title } from './WeatherCity.styled';\r\nimport { WeatherList } from '../WeatherList/WeatherList';\r\nimport { apiServiceSearchData } from '../../Api/apiService';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\nexport const WeatherCity = ({ weather, weatherCity, setWeatherCity, isOpen }) => {\r\n  // const [weatherCity, setWeatherCity] = useState(\r\n  //   JSON.parse(localStorage.getItem('weatherCity')) ?? []\r\n  // );\r\n  const [value, setValue] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [offset, setOffset]= useState(\"-100%\");\r\n  console.log(\"first value: \" + JSON.stringify(value))\r\n  console.log('weatherCity:', weatherCity);\r\n\r\n  // !!!!!!!!!!!!!!!!\r\n  const handleSubmit = value => {\r\n    setValue(value.toLowerCase());\r\n  };\r\n\r\n  const addCity = city => {\r\n    if (city.length === 0) {\r\n      alert('Field must be filled');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('weatherCity', JSON.stringify(weatherCity));\r\n\r\n    if (value.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    apiServiceSearchData(value)\r\n      .then(data => setWeatherCity([...weatherCity, { ...data }]))\r\n\r\n      .catch(error => console.error(error))\r\n      .finally(() => setIsLoading(false));\r\n  }, [value]);\r\n\r\n  return (\r\n    <WeatherForm >\r\n      <Title>Weather</Title>\r\n      <SearchBar\r\n        onSubmit={handleSubmit}\r\n        onAddCity={addCity}\r\n        weather={weather}\r\n      />\r\n\r\n      <WeatherList cities={weatherCity} />\r\n      {isLoading && <Loader />}\r\n    </WeatherForm>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}