{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Project\\\\weather-app\\\\src\\\\components\\\\Header\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Logo } from './Logo/Logo';\nimport { Section, MenuBtn, CurrentTime, CurrentDate } from './Header.styled';\nimport { MenuBurgerImg } from 'icons/IconComponent.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = ({\n  isOpen,\n  setIsOpen\n}) => {\n  _s();\n  // const [isOpen, setIsOpen] = useState(false);\n  // console.log('isOpen', isOpen);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const currentDate = new Date();\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const formattedDate = currentDate.toLocaleDateString(undefined, options);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(MenuBtn, {\n      type: \"button\",\n      \"aria-label\": \"burger-menu\",\n      title: \"Menu\",\n      onClick: () => {\n        console.log('Header-isOpen', isOpen);\n        setIsOpen(!isOpen);\n      },\n      children: /*#__PURE__*/_jsxDEV(MenuBurgerImg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentTime, {\n      children: `${currentTime.toLocaleTimeString()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentDate, {\n      children: ` ${formattedDate}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"f3elDUct5ap4W3FuLtGG73aMsLc=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","Logo","Section","MenuBtn","CurrentTime","CurrentDate","MenuBurgerImg","jsxDEV","_jsxDEV","Header","isOpen","setIsOpen","_s","currentTime","setCurrentTime","Date","currentDate","options","weekday","year","month","day","formattedDate","toLocaleDateString","undefined","intervalId","setInterval","clearInterval","children","type","title","onClick","console","log","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","_c","$RefreshReg$"],"sources":["D:/My Project/weather-app/src/components/Header/Header.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Logo } from './Logo/Logo';\r\nimport { Section, MenuBtn, CurrentTime, CurrentDate } from './Header.styled';\r\nimport { MenuBurgerImg } from 'icons/IconComponent.jsx';\r\n\r\nexport const Header = ({ isOpen, setIsOpen }) => {\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n  // console.log('isOpen', isOpen);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n\r\n  const currentDate = new Date();\r\n\r\n  const options = {\r\n    weekday: 'long',\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  };\r\n  const formattedDate = currentDate.toLocaleDateString(undefined, options);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Section>\r\n      <MenuBtn\r\n        type=\"button\"\r\n        aria-label=\"burger-menu\"\r\n        title=\"Menu\"\r\n        onClick={() => {\r\n          console.log('Header-isOpen', isOpen);\r\n          setIsOpen(!isOpen);\r\n        }}\r\n      >\r\n        <MenuBurgerImg />\r\n      </MenuBtn>\r\n      <CurrentTime>{`${currentTime.toLocaleTimeString()}`}</CurrentTime>\r\n      <CurrentDate>{` ${formattedDate}`}</CurrentDate>\r\n      <Logo />\r\n    </Section>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,WAAW,QAAQ,iBAAiB;AAC5E,SAASC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,OAAO,MAAMC,MAAM,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC/C;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAIgB,IAAI,CAAC,CAAC,CAAC;EAE1D,MAAMC,WAAW,GAAG,IAAID,IAAI,CAAC,CAAC;EAE9B,MAAME,OAAO,GAAG;IACdC,OAAO,EAAE,MAAM;IACfC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE;EACP,CAAC;EACD,MAAMC,aAAa,GAAGN,WAAW,CAACO,kBAAkB,CAACC,SAAS,EAAEP,OAAO,CAAC;EAExEjB,SAAS,CAAC,MAAM;IACd,MAAMyB,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCZ,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXY,aAAa,CAACF,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA,CAACN,OAAO;IAAA0B,QAAA,gBACNpB,OAAA,CAACL,OAAO;MACN0B,IAAI,EAAC,QAAQ;MACb,cAAW,aAAa;MACxBC,KAAK,EAAC,MAAM;MACZC,OAAO,EAAEA,CAAA,KAAM;QACbC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEvB,MAAM,CAAC;QACpCC,SAAS,CAAC,CAACD,MAAM,CAAC;MACpB,CAAE;MAAAkB,QAAA,eAEFpB,OAAA,CAACF,aAAa;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACV7B,OAAA,CAACJ,WAAW;MAAAwB,QAAA,EAAG,GAAEf,WAAW,CAACyB,kBAAkB,CAAC,CAAE;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAClE7B,OAAA,CAACH,WAAW;MAAAuB,QAAA,EAAG,IAAGN,aAAc;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAChD7B,OAAA,CAACP,IAAI;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACzB,EAAA,CA3CWH,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}