{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Project\\\\weather-app\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { WeatherCity } from '../components/WeatherCity/WeatherCity';\nimport { MyLocationWeather } from '../components/MyLocationWeather/MyLocationWeather';\nimport { useEffect, useState } from 'react';\nimport { apiServiceWeatherData, apiServiceForecastData } from '../Api/apiService';\nimport { Loader } from '../components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  var _JSON$parse, _JSON$parse2;\n  const [weather, setWeather] = useState((_JSON$parse = JSON.parse(localStorage.getItem('weather'))) !== null && _JSON$parse !== void 0 ? _JSON$parse : {});\n  const [forecast, setForecast] = useState((_JSON$parse2 = JSON.parse(localStorage.getItem('weather'))) !== null && _JSON$parse2 !== void 0 ? _JSON$parse2 : {});\n  const [location, setLocation] = useState({\n    latitude: null,\n    longitude: null\n  });\n  const [value, setValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // console.log(location);\n  // console.log(weather);\n  // console.log(forecast);\n  const {\n    latitude,\n    longitude\n  } = location;\n  const handleSuccess = position => {\n    const {\n      latitude,\n      longitude\n    } = position.coords;\n    setLocation({\n      latitude,\n      longitude\n    });\n  };\n  const handleError = error => {\n    console.log(error);\n  };\n  useEffect(() => {\n    localStorage.setItem('weather', JSON.stringify(weather));\n    setIsLoading(true);\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(handleSuccess, handleError);\n    } else {\n      alert('Geolocation is not supported by your browser');\n    }\n    if (latitude !== null && longitude !== null) {\n      apiServiceWeatherData(latitude, longitude).then(weather => setWeather(weather)).catch(error => console.error(error)).finally(() => setIsLoading(false));\n      apiServiceForecastData(latitude, longitude).then(forecast => setForecast(forecast)).catch(error => console.error(error)).finally(() => setIsLoading(false));\n    }\n  }, [latitude, longitude]);\n  useEffect(() => {\n    if (value.trim() === '') {\n      return;\n    }\n    setIsLoading(true);\n    // Все запросы должны идти через корневой компонент Home!!!!\n    apiServiceSearchData(value).then(weather => setWeather(weather)).catch(error => console.error(error)).finally(() => setIsLoading(false));\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [Object.keys(weather).length && /*#__PURE__*/_jsxDEV(WeatherCity, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 39\n    }, this), Object.keys(weather).length && /*#__PURE__*/_jsxDEV(MyLocationWeather, {\n      weather: weather,\n      forecast: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"IGqPcTb7jw2QdOXLfLI5de6GQNs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["WeatherCity","MyLocationWeather","useEffect","useState","apiServiceWeatherData","apiServiceForecastData","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","_JSON$parse","_JSON$parse2","weather","setWeather","JSON","parse","localStorage","getItem","forecast","setForecast","location","setLocation","latitude","longitude","value","setValue","isLoading","setIsLoading","handleSuccess","position","coords","handleError","error","console","log","setItem","stringify","navigator","geolocation","getCurrentPosition","alert","then","catch","finally","trim","apiServiceSearchData","children","Object","keys","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/My Project/weather-app/src/pages/Home.jsx"],"sourcesContent":["import { WeatherCity } from '../components/WeatherCity/WeatherCity';\r\nimport { MyLocationWeather } from '../components/MyLocationWeather/MyLocationWeather';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  apiServiceWeatherData,\r\n  apiServiceForecastData,\r\n} from '../Api/apiService';\r\nimport { Loader } from '../components/Loader/Loader';\r\n\r\nconst Home = () => {\r\n  const [weather, setWeather] = useState(\r\n    JSON.parse(localStorage.getItem('weather')) ?? {}\r\n  );\r\n  const [forecast, setForecast] = useState(\r\n    JSON.parse(localStorage.getItem('weather')) ?? {}\r\n  );\r\n  const [location, setLocation] = useState({\r\n    latitude: null,\r\n    longitude: null,\r\n  });\r\n  const [value, setValue] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // console.log(location);\r\n  // console.log(weather);\r\n  // console.log(forecast);\r\n  const { latitude, longitude } = location;\r\n\r\n  const handleSuccess = position => {\r\n    const { latitude, longitude } = position.coords;\r\n    setLocation({ latitude, longitude });\r\n  };\r\n\r\n  const handleError = error => {\r\n    console.log(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('weather', JSON.stringify(weather));\r\n    setIsLoading(true);\r\n\r\n    if ('geolocation' in navigator) {\r\n      navigator.geolocation.getCurrentPosition(handleSuccess, handleError);\r\n    } else {\r\n      alert('Geolocation is not supported by your browser');\r\n    }\r\n\r\n    if (latitude !== null && longitude !== null) {\r\n      apiServiceWeatherData(latitude, longitude)\r\n        .then(weather => setWeather(weather))\r\n        .catch(error => console.error(error))\r\n        .finally(() => setIsLoading(false));\r\n\r\n      apiServiceForecastData(latitude, longitude)\r\n        .then(forecast => setForecast(forecast))\r\n        .catch(error => console.error(error))\r\n        .finally(() => setIsLoading(false));\r\n    }\r\n  }, [latitude, longitude]);\r\n\r\n  useEffect(() => {\r\n    if (value.trim() === '') {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n// Все запросы должны идти через корневой компонент Home!!!!\r\n    apiServiceSearchData(value)\r\n      .then(weather => setWeather(weather))\r\n      .catch(error=> console.error(error))\r\n      .finally(() => setIsLoading(false));\r\n  }, [value]);\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(weather).length && <WeatherCity weather={weather} />}\r\n      {Object.keys(weather).length && (\r\n        <MyLocationWeather weather={weather} forecast={forecast} />\r\n      )}\r\n\r\n      {/* <WeatherCity weather={weather} /> */}\r\n      {/* <MyLocationWeather weather={weather} forecast={forecast} /> */}\r\n      {isLoading && <Loader />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}