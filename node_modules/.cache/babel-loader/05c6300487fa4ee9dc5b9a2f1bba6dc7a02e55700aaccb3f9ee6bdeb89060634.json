{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Project\\\\weather-app\\\\src\\\\components\\\\WeatherCard\\\\WeatherCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Block, BlockItem, City, Time, Description, Temperature, Location, CloseBtn\n// FadeInComponent,\n} from './WeatherCard.styled';\nimport { CloseCardImg } from 'icons/IconComponent';\n// import { CSSTransition } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherCard({\n  weatherCity,\n  onCloseBtn,\n  onDeleteCard\n}) {\n  _s();\n  // const [onCloseBtn, setOnCloseBtn] = useState(false);\n  // console.log(\"onCloseBtn:\", onCloseBtn)\n  // console.log(weatherCity);\n  // console.log((new Date(weatherCity.dt * 1000)).getTimezoneOffset() / 60)\n  // !!!!! The time is shown incorrectly, correct it...\n  // const UTCTime = () => {\n  //   let time = new Date(weatherCity.dt*1000);\n  //   return time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  // };\n  // let timezone = weatherCity.dt + weatherCity.timezone;\n  // console.log(timezone)\n  const [currentTime, setCurrentTime] = useState(new Date());\n  console.log(currentTime);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      const utcTime = now.getTime() + now.getTimezoneOffset() * 60000;\n      const timeWithOffset = new Date(utcTime + weatherCity.timezone * 1000);\n      setCurrentTime(timeWithOffset.toISOString().slice(11, 19));\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  const [showComponent, setShowComponent] = useState(false);\n  // console.log('showComponent:', showComponent);\n\n  useEffect(() => {\n    setShowComponent(!showComponent);\n    // console.log(showComponent)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: showComponent ? 'active' : 'exit-active',\n    children: [/*#__PURE__*/_jsxDEV(Block, {\n      children: [/*#__PURE__*/_jsxDEV(BlockItem, {\n        children: [/*#__PURE__*/_jsxDEV(City, {\n          children: weatherCity.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Time, {\n          children: {\n            currentTime\n          }\n          /*`${currentTime.toLocaleTimeString([], {\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n          })}`*/\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Temperature, {\n        children: [Math.trunc(weatherCity.main.temp), \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Block, {\n      children: [/*#__PURE__*/_jsxDEV(Description, {\n        children: weatherCity.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Location, {\n        children: [\"H:\", Math.trunc(weatherCity.coord.lat), \" L:\", Math.trunc(weatherCity.coord.lon)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), onCloseBtn && /*#__PURE__*/_jsxDEV(CloseBtn, {\n      type: \"button\",\n      \"aria-label\": \"close\",\n      title: \"Close\",\n      onClick: () => {\n        onDeleteCard(weatherCity.id);\n      },\n      className: onCloseBtn ? 'active' : '',\n      children: /*#__PURE__*/_jsxDEV(CloseCardImg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherCard, \"bBFjjeuHZ+KxTjiwCQMw2ZqVL28=\");\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["React","useEffect","useState","Container","Block","BlockItem","City","Time","Description","Temperature","Location","CloseBtn","CloseCardImg","jsxDEV","_jsxDEV","WeatherCard","weatherCity","onCloseBtn","onDeleteCard","_s","currentTime","setCurrentTime","Date","console","log","interval","setInterval","now","utcTime","getTime","getTimezoneOffset","timeWithOffset","timezone","toISOString","slice","clearInterval","showComponent","setShowComponent","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","Math","trunc","main","temp","weather","description","coord","lat","lon","type","title","onClick","id","_c","$RefreshReg$"],"sources":["D:/My Project/weather-app/src/components/WeatherCard/WeatherCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Block,\r\n  BlockItem,\r\n  City,\r\n  Time,\r\n  Description,\r\n  Temperature,\r\n  Location,\r\n  CloseBtn,\r\n  // FadeInComponent,\r\n} from './WeatherCard.styled';\r\n\r\nimport { CloseCardImg } from 'icons/IconComponent';\r\n// import { CSSTransition } from 'react-transition-group';\r\n\r\nfunction WeatherCard({ weatherCity, onCloseBtn, onDeleteCard }) {\r\n  // const [onCloseBtn, setOnCloseBtn] = useState(false);\r\n  // console.log(\"onCloseBtn:\", onCloseBtn)\r\n  // console.log(weatherCity);\r\n  // console.log((new Date(weatherCity.dt * 1000)).getTimezoneOffset() / 60)\r\n  // !!!!! The time is shown incorrectly, correct it...\r\n  // const UTCTime = () => {\r\n  //   let time = new Date(weatherCity.dt*1000);\r\n  //   return time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  // };\r\n  // let timezone = weatherCity.dt + weatherCity.timezone;\r\n  // console.log(timezone)\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  console.log(currentTime);\r\n\r\n  useEffect(() => {\r\n    \r\n    const interval = setInterval(() => {\r\n      const now = new Date();\r\n      const utcTime = now.getTime() + now.getTimezoneOffset() * 60000;\r\n      const timeWithOffset = new Date(utcTime + weatherCity.timezone * 1000);\r\n\r\n      setCurrentTime(timeWithOffset.toISOString().slice(11, 19));\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  const [showComponent, setShowComponent] = useState(false);\r\n  // console.log('showComponent:', showComponent);\r\n\r\n  useEffect(() => {\r\n    setShowComponent(!showComponent);\r\n    // console.log(showComponent)\r\n  }, []);\r\n\r\n  return (\r\n    <Container className={showComponent ? 'active' : 'exit-active'}>\r\n      <Block>\r\n        <BlockItem>\r\n          <City>{weatherCity.name}</City>\r\n          <Time>\r\n            {/* {(new Date(weatherCity.dt * 1000)).toUTCString()} */}\r\n            {\r\n              {currentTime}\r\n              /*`${currentTime.toLocaleTimeString([], {\r\n                hour: '2-digit',\r\n                minute: '2-digit',\r\n              })}`*/\r\n            }\r\n          </Time>\r\n        </BlockItem>\r\n        <Temperature>{Math.trunc(weatherCity.main.temp)}Â°</Temperature>\r\n      </Block>\r\n      <Block>\r\n        <Description>{weatherCity.weather[0].description}</Description>\r\n        <Location>\r\n          H:{Math.trunc(weatherCity.coord.lat)} L:\r\n          {Math.trunc(weatherCity.coord.lon)}\r\n        </Location>\r\n      </Block>\r\n      {onCloseBtn && (\r\n        <CloseBtn\r\n          type=\"button\"\r\n          aria-label=\"close\"\r\n          title=\"Close\"\r\n          onClick={() => {\r\n            onDeleteCard(weatherCity.id);\r\n          }}\r\n          className={onCloseBtn ? 'active' : ''}\r\n        >\r\n          <CloseCardImg />\r\n        </CloseBtn>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}